# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dockerId: test-docker-id 
  imageName: test-image-name

steps:
# - task: NuGetToolInstaller@0

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
- bash: |
    mkdir ./build
    mkdir ./build/AzDemo
    mkdir ./publish
  displayName: Create build directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: './AzDemo/AzDemo.csproj'
    arguments: ' --output $(System.DefaultWorkingDirectory)/build/AzDemo -r linux-x64 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true'
    zipAfterPublish: false

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       wget https://github.com/dgiagio/warp/releases/download/v0.3.0/linux-x64.warp-packer
#       chmod +x linux-x64.warp-packer
#       ls $(System.DefaultWorkingDirectory)/build/AzDemo/* -l
#       ./linux-x64.warp-packer --arch linux-x64 --input_dir ./AzDemo --exec $(System.DefaultWorkingDirectory)/build/AzDemo/AzDemo.dll --output $(System.DefaultWorkingDirectory)/build/AzDemo/AzDemo.dll
      
#     workingDirectory: '$(System.DefaultWorkingDirectory)/build/'
    